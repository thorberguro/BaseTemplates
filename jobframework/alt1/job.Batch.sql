if not exists(select [name] from sys.[schemas] where [name] = 'job')
begin
	Declare @sqlstmt nvarchar(500) = 'create schema job'
	Exec (@sqlstmt)
end
go

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
DROP TABLE IF EXISTS [job].[Batch]
GO
CREATE TABLE [job].[Batch]
(
	[Id]                        [int] IDENTITY(1,1) NOT NULL,
	[PlatformType]              [nvarchar](50)      NOT NULL, -- ADF, PS, Python, ... 
	[PlatformContainer]         [nvarchar](50)      NULL,     -- Name of the ADF, name of the 
	[PlatformRunId]             [nvarchar](50)      NULL,     -- unique identifier of the running job generated by the platform it runs on
	[Module]                    [nvarchar](200)     NOT NULL, -- Name of the program runnin (e.g. pipeline name in ADF, script name in powershell, ...
	[ModuleId]                  [nvarchar](50)      NULL,     -- Unique identifier of this version of the calling program (usually a GUID or any autogenerated number) 
	[OriginId]                  [int]               NOT NULL,
	[Classification]            [nvarchar](50)      NULL,     -- ETL, DATA_PREP, DATA_REPL, DATA_COLLECTION
	[Status]                    [nvarchar](50)      NOT NULL,
					            
	-- BATCH		            
	[BatchStart]                [datetime] NULL DEFAULT GETUTCDATE(),
	[BatchEnd]                  [datetime] NULL,
	[BatchDuration]             [int]      NULL,

	-- PRELOAD
	[PreloadStart]              [datetime] NULL,
	[PreloadEnd]                [datetime] NULL,
	[PreloadRowsInserted]       [int]      NULL,
	[PreloadDuration]           [int]      NULL,
	[PreloadBatchIdProcessed]   [int]      NULL,   -- Used for YtriGogn/InnriGogn mainly
							    
	-- EL					  	       
	[ELDuration]                [int]      NULL,
						        
	-- POSTLOAD			        
	[PostloadStart]             [datetime] NULL,
	[PostloadEnd]               [datetime] NULL,
	[PostloadDuration]          [int]      NULL,
						        
	-- PUBLISH			        
	[PublishStart]              [datetime] NULL,
	[PublishEnd]                [datetime] NULL,
	[PublishDuration]           [int]      NULL,
	[PublishRowsInserted]       [int]      NULL,
	[PublishRowsUpdated]        [int]      NULL,
	[PublishRowsDeleted]        [int]      NULL,
						        
	-- POSTPROCESS		        
	[PostprocessStart]          [datetime] NULL,
	[PostprocessEnd]            [datetime] NULL,
	[PostprocessDuration]       [int]      NULL,
	[PostprocessUnprocessedCnt] [int]      NULL,   -- Used for YtriGogn/InnriGogn mainly
						     
	-- SLA				     
	[idSLA]                     [int]          NOT NULL DEFAULT -1,
	[SLAStatus]                 [nvarchar](50) NULL,
	[SLANotification]           [datetime]     NULL,
 CONSTRAINT [PK_Batch] PRIMARY KEY CLUSTERED ([Id] ASC)
) ON [PRIMARY]
GO
ALTER TABLE job.Batch add CONSTRAINT CHK_Status CHECK (status in ('Running','Failed','Done'))
go
ALTER TABLE job.Batch add CONSTRAINT CHK_Classification CHECK ([Classification] in ('ETL', 'DATA_PREP', 'DATA_REPL', 'DATA_COLLECTION'))
go
